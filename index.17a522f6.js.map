{"mappings":"ICAI,EACA,EAOJ,IAAI,EAAQ,EAER,EAAc,EAAE,CAEhB,EAAY,EAGZ,EAAW,CAAA,EACX,EAAQ,EACR,EAAc,CAAA,EAiBlB,SAAS,IACP,SAAS,cAAc,CAAC,YAAY,KAAK,CAAC,OAAO,CAAG,OACpD,EAAc,CAAA,EACd,EAAW,CAAA,EACX,EAAQ,EACR,EAAc,EAAE,CAChB,EAAY,EAEZ,IAAM,EAAe,SAAS,aAAa,CAAC,MAC5C,CAAA,EAAa,EAAE,CAAG,QAClB,EAAa,KAAK,CAAC,QAAQ,CAAG,WAC9B,EAAa,KAAK,CAAC,GAAG,CAAG,OACzB,EAAa,KAAK,CAAC,IAAI,CAAG,OAC1B,EAAa,KAAK,CAAC,IAAI,CAAG,eAC1B,EAAM,WAAW,CAAC,GAElB,AAIF,SAAS,KACF,GAAe,IAIpB,GA9CY,GA+CZ,EAAQ,KAAK,GAAG,CAAC,EAAQ,EAAW,GACpC,EAAK,KAAK,CAAC,MAAM,CAAG,CAAA,EAAG,EAAM,EAAE,CAAC,CAEhC,EAAY,OAAO,CAAC,CAAC,EAAQ,KAC3B,EAAO,CAAC,EArDI,GAsDR,EAAO,CAAC,CAAG,EAAO,KAAK,CAAG,GAC5B,EAAY,MAAM,CAAC,EAAO,GAC1B,EAAM,WAAW,CAAC,EAAO,OAAO,GAEhC,EAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,EAAO,CAAC,CAAC,EAAE,CAAC,CAGzC,AAkER,SAAyB,CAAI,CAAE,CAAM,EACnC,IAAM,EAAW,EAAK,qBAAqB,GACrC,EAAa,EAAO,OAAO,CAAC,qBAAqB,GAEvD,MAAO,CACL,CAAA,EAAS,KAAK,CAAG,EAAW,IAAI,EAChC,EAAS,IAAI,CAAG,EAAW,KAAK,EAChC,EAAS,MAAM,CAAG,EAAW,GAAG,EAChC,EAAS,GAAG,CAAG,EAAW,MAAK,AAAL,CAE9B,EA5EwB,EAAM,KACxB,EAAW,CAAA,EACX,EAAc,CAAA,EACd,EAAK,KAAK,CAAC,eAAe,CAAG,yCAC7B,MAAM,+BAAiC,GAE3C,GAEA,IACA,SAAS,cAAc,CAAC,SAAS,SAAS,CAAG,EAExC,GACH,sBAAsB,GAE1B,IAnCE,YAAY,EAAa,IAC3B,CAoCA,SAAS,EAAS,CAAC,GACb,GAAa,GAIZ,CAAA,AAAW,MAAX,EAAE,IAAI,EAAY,AAAW,YAAX,EAAE,IAAI,AAAK,GAAc,AAAU,IAAV,GAC9C,CAAA,EAAY,GADd,CAGF,CAEA,SAAS,IACP,GAAI,CAAC,GAAe,EAClB,OAGF,IAAM,EAAS,SAAS,aAAa,CAAC,OAChC,EAAO,KAAK,MAAM,EAEpB,CAAA,EAAO,IACT,EAAO,SAAS,CAAC,GAAG,CAAC,SAAU,WAC/B,EAAY,IAAI,CAAC,CACf,QAAS,EACT,EA5GW,IA6GX,EAAG,EACH,MAAO,IACP,OAAQ,EACV,IACS,EAAO,IAChB,EAAO,SAAS,CAAC,GAAG,CAAC,SAAU,WAC/B,EAAY,IAAI,CAAC,CACf,QAAS,EACT,EArHW,IAsHX,EAAG,EACH,MAAO,GACP,OAAQ,EACV,KAEA,EAAO,SAAS,CAAC,GAAG,CAAC,SAAU,WAC/B,EAAY,IAAI,CAAC,CACf,QAAS,EACT,EA9HW,IA+HX,EAAG,EACH,MAAO,GACP,OAAQ,EACV,IAGF,EAAM,WAAW,CAAC,EACpB,CArHA,OAAO,MAAM,CAAG,WAEd,AADiB,SAAS,cAAc,CAAC,YAChC,gBAAgB,CAAC,QAAS,GAEnC,EAAQ,SAAS,cAAc,CAAC,SAGhC,AADA,CAAA,EAAO,SAAS,aAAa,CAAC,MAA9B,EACK,SAAS,CAAC,GAAG,CAAC,QACnB,EAAK,KAAK,CAAC,IAAI,CAAG,OAClB,EAAK,KAAK,CAAC,MAAM,CAAG,CAAA,EAAG,EAAM,EAAE,CAAC,CAChC,EAAM,WAAW,CAAC,GAElB,SAAS,gBAAgB,CAAC,UAAW,EACvC","sources":["<anon>","src/js/dinosaur.js"],"sourcesContent":["var $c73f14873669601f$exports = {};\nlet $c73f14873669601f$var$board;\nlet $c73f14873669601f$var$dino;\nlet $c73f14873669601f$var$boardWidth = 750;\nlet $c73f14873669601f$var$boardHeight = 250;\nlet $c73f14873669601f$var$dinoWidth = 88;\nlet $c73f14873669601f$var$dinoHeight = 94;\nlet $c73f14873669601f$var$dinoX = 50;\nlet $c73f14873669601f$var$dinoY = 0;\nlet $c73f14873669601f$var$cactusArray = [];\nlet $c73f14873669601f$var$velocityX = -8;\nlet $c73f14873669601f$var$velocityY = 0;\nlet $c73f14873669601f$var$gravity = 0.4;\nlet $c73f14873669601f$var$gameOver = false;\nlet $c73f14873669601f$var$score = 0;\nlet $c73f14873669601f$var$gameStarted = false;\nwindow.onload = function() {\n    const startBtn = document.getElementById('startBtn');\n    startBtn.addEventListener('click', $c73f14873669601f$var$startGame);\n    $c73f14873669601f$var$board = document.getElementById('board');\n    $c73f14873669601f$var$dino = document.createElement('div');\n    $c73f14873669601f$var$dino.classList.add('dino');\n    $c73f14873669601f$var$dino.style.left = `${$c73f14873669601f$var$dinoX}px`;\n    $c73f14873669601f$var$dino.style.bottom = `${$c73f14873669601f$var$dinoY}px`;\n    $c73f14873669601f$var$board.appendChild($c73f14873669601f$var$dino);\n    document.addEventListener('keydown', $c73f14873669601f$var$moveDino);\n};\nfunction $c73f14873669601f$var$startGame() {\n    document.getElementById('startBtn').style.display = 'none';\n    $c73f14873669601f$var$gameStarted = true;\n    $c73f14873669601f$var$gameOver = false;\n    $c73f14873669601f$var$score = 0;\n    $c73f14873669601f$var$cactusArray = [];\n    $c73f14873669601f$var$velocityY = 0;\n    const scoreDisplay = document.createElement('div');\n    scoreDisplay.id = 'score';\n    scoreDisplay.style.position = 'absolute';\n    scoreDisplay.style.top = '10px';\n    scoreDisplay.style.left = '10px';\n    scoreDisplay.style.font = '20px courier';\n    $c73f14873669601f$var$board.appendChild(scoreDisplay);\n    $c73f14873669601f$var$update();\n    setInterval($c73f14873669601f$var$placeCactus, 1000);\n}\nfunction $c73f14873669601f$var$update() {\n    if (!$c73f14873669601f$var$gameStarted || $c73f14873669601f$var$gameOver) return;\n    $c73f14873669601f$var$velocityY += $c73f14873669601f$var$gravity;\n    $c73f14873669601f$var$dinoY = Math.min($c73f14873669601f$var$dinoY + $c73f14873669601f$var$velocityY, 0);\n    $c73f14873669601f$var$dino.style.bottom = `${$c73f14873669601f$var$dinoY}px`;\n    $c73f14873669601f$var$cactusArray.forEach((cactus, index)=>{\n        cactus.x += $c73f14873669601f$var$velocityX;\n        if (cactus.x + cactus.width < 0) {\n            $c73f14873669601f$var$cactusArray.splice(index, 1);\n            $c73f14873669601f$var$board.removeChild(cactus.element);\n        } else cactus.element.style.left = `${cactus.x}px`;\n        if ($c73f14873669601f$var$detectCollision($c73f14873669601f$var$dino, cactus)) {\n            $c73f14873669601f$var$gameOver = true;\n            $c73f14873669601f$var$gameStarted = false;\n            $c73f14873669601f$var$dino.style.backgroundImage = \"url('./images/dinosaur/dino-dead.png')\";\n            alert(\"\\u0413\\u0440\\u0443 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043E! \\u0412\\u0430\\u0448 \\u0440\\u0430\\u0445\\u0443\\u043D\\u043E\\u043A: \" + $c73f14873669601f$var$score);\n        }\n    });\n    $c73f14873669601f$var$score++;\n    document.getElementById('score').innerText = $c73f14873669601f$var$score;\n    if (!$c73f14873669601f$var$gameOver) requestAnimationFrame($c73f14873669601f$var$update);\n}\nfunction $c73f14873669601f$var$moveDino(e) {\n    if ($c73f14873669601f$var$gameOver || !$c73f14873669601f$var$gameStarted) return;\n    if ((e.code === 'W' || e.code === 'ArrowUp') && $c73f14873669601f$var$dinoY === 0) $c73f14873669601f$var$velocityY = -10;\n}\nfunction $c73f14873669601f$var$placeCactus() {\n    if (!$c73f14873669601f$var$gameStarted || $c73f14873669601f$var$gameOver) return;\n    const cactus = document.createElement('div');\n    const type = Math.random();\n    if (type > 0.9) {\n        cactus.classList.add('cactus', 'cactus3');\n        $c73f14873669601f$var$cactusArray.push({\n            element: cactus,\n            x: $c73f14873669601f$var$boardWidth,\n            y: 0,\n            width: 102,\n            height: 70\n        });\n    } else if (type > 0.7) {\n        cactus.classList.add('cactus', 'cactus2');\n        $c73f14873669601f$var$cactusArray.push({\n            element: cactus,\n            x: $c73f14873669601f$var$boardWidth,\n            y: 0,\n            width: 69,\n            height: 70\n        });\n    } else {\n        cactus.classList.add('cactus', 'cactus1');\n        $c73f14873669601f$var$cactusArray.push({\n            element: cactus,\n            x: $c73f14873669601f$var$boardWidth,\n            y: 0,\n            width: 34,\n            height: 70\n        });\n    }\n    $c73f14873669601f$var$board.appendChild(cactus);\n}\nfunction $c73f14873669601f$var$detectCollision(dino, cactus) {\n    const dinoRect = dino.getBoundingClientRect();\n    const cactusRect = cactus.element.getBoundingClientRect();\n    return !(dinoRect.right < cactusRect.left || dinoRect.left > cactusRect.right || dinoRect.bottom < cactusRect.top || dinoRect.top > cactusRect.bottom);\n}\n\n\n//# sourceMappingURL=index.17a522f6.js.map\n","let board;\nlet dino;\nlet boardWidth = 750;\nlet boardHeight = 250;\n\nlet dinoWidth = 88;\nlet dinoHeight = 94;\nlet dinoX = 50;\nlet dinoY = 0;\n\nlet cactusArray = [];\nlet velocityX = -8;\nlet velocityY = 0;\nlet gravity = 0.4;\n\nlet gameOver = false;\nlet score = 0;\nlet gameStarted = false;\n\nwindow.onload = function () {\n  const startBtn = document.getElementById('startBtn');\n  startBtn.addEventListener('click', startGame);\n\n  board = document.getElementById('board');\n\n  dino = document.createElement('div');\n  dino.classList.add('dino');\n  dino.style.left = `${dinoX}px`;\n  dino.style.bottom = `${dinoY}px`;\n  board.appendChild(dino);\n\n  document.addEventListener('keydown', moveDino);\n};\n\nfunction startGame() {\n  document.getElementById('startBtn').style.display = 'none';\n  gameStarted = true;\n  gameOver = false;\n  score = 0;\n  cactusArray = [];\n  velocityY = 0;\n\n  const scoreDisplay = document.createElement('div');\n  scoreDisplay.id = 'score';\n  scoreDisplay.style.position = 'absolute';\n  scoreDisplay.style.top = '10px';\n  scoreDisplay.style.left = '10px';\n  scoreDisplay.style.font = '20px courier';\n  board.appendChild(scoreDisplay);\n\n  update();\n  setInterval(placeCactus, 1000);\n}\n\nfunction update() {\n  if (!gameStarted || gameOver) {\n    return;\n  }\n\n  velocityY += gravity;\n  dinoY = Math.min(dinoY + velocityY, 0);\n  dino.style.bottom = `${dinoY}px`;\n\n  cactusArray.forEach((cactus, index) => {\n    cactus.x += velocityX;\n    if (cactus.x + cactus.width < 0) {\n      cactusArray.splice(index, 1);\n      board.removeChild(cactus.element);\n    } else {\n      cactus.element.style.left = `${cactus.x}px`;\n    }\n\n    if (detectCollision(dino, cactus)) {\n      gameOver = true;\n      gameStarted = false;\n      dino.style.backgroundImage = \"url('./images/dinosaur/dino-dead.png')\";\n      alert('Гру завершено! Ваш рахунок: ' + score);\n    }\n  });\n\n  score++;\n  document.getElementById('score').innerText = score;\n\n  if (!gameOver) {\n    requestAnimationFrame(update);\n  }\n}\n\nfunction moveDino(e) {\n  if (gameOver || !gameStarted) {\n    return;\n  }\n\n  if ((e.code === 'W' || e.code === 'ArrowUp') && dinoY === 0) {\n    velocityY = -10;\n  }\n}\n\nfunction placeCactus() {\n  if (!gameStarted || gameOver) {\n    return;\n  }\n\n  const cactus = document.createElement('div');\n  const type = Math.random();\n\n  if (type > 0.9) {\n    cactus.classList.add('cactus', 'cactus3');\n    cactusArray.push({\n      element: cactus,\n      x: boardWidth,\n      y: 0,\n      width: 102,\n      height: 70,\n    });\n  } else if (type > 0.7) {\n    cactus.classList.add('cactus', 'cactus2');\n    cactusArray.push({\n      element: cactus,\n      x: boardWidth,\n      y: 0,\n      width: 69,\n      height: 70,\n    });\n  } else {\n    cactus.classList.add('cactus', 'cactus1');\n    cactusArray.push({\n      element: cactus,\n      x: boardWidth,\n      y: 0,\n      width: 34,\n      height: 70,\n    });\n  }\n\n  board.appendChild(cactus);\n}\n\nfunction detectCollision(dino, cactus) {\n  const dinoRect = dino.getBoundingClientRect();\n  const cactusRect = cactus.element.getBoundingClientRect();\n\n  return !(\n    dinoRect.right < cactusRect.left ||\n    dinoRect.left > cactusRect.right ||\n    dinoRect.bottom < cactusRect.top ||\n    dinoRect.top > cactusRect.bottom\n  );\n}\n"],"names":["$c73f14873669601f$var$board","$c73f14873669601f$var$dino","$c73f14873669601f$var$dinoY","$c73f14873669601f$var$cactusArray","$c73f14873669601f$var$velocityY","$c73f14873669601f$var$gameOver","$c73f14873669601f$var$score","$c73f14873669601f$var$gameStarted","$c73f14873669601f$var$startGame","document","getElementById","style","display","scoreDisplay","createElement","id","position","top","left","font","appendChild","$c73f14873669601f$var$update","Math","min","bottom","forEach","cactus","index","x","width","splice","removeChild","element","$c73f14873669601f$var$detectCollision","dino","dinoRect","getBoundingClientRect","cactusRect","right","backgroundImage","alert","innerText","requestAnimationFrame","setInterval","$c73f14873669601f$var$placeCactus","$c73f14873669601f$var$moveDino","e","code","type","random","classList","add","push","y","height","window","onload","startBtn","addEventListener"],"version":3,"file":"index.17a522f6.js.map"}